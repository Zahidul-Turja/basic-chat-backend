version: "3"

services:
  redis:
    container_name: live-chat-backend-redis
    restart: always
    image: redis:5
    volumes:
      - redisdata:/data

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD="5pc_p@55w0rd_"
      - POSTGRES_USER="spc_admin"
      - POSTGRES_DB="live_chat_backend"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spc_admin -d live_chat_backend"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  web:
    container_name: live_chat_backend
    build:
      context: .
      dockerfile: Dockerfile
    image: live_chat_backend:latest
    volumes:
      - .:/app
      - ./static:/app/static
      - ./media:/app/media
    ports:
      - "9011:9011"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=${DEBUG}
    command: >
      bash -c "python manage.py runserver 0.0.0.0:9011"
    restart: always

  # filebeat:
  #   container_name: filebeat
  #   image: docker.elastic.co/beats/filebeat:7.10.2
  #   user: root
  #   volumes:
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
  #     - /var/lib/docker/containers:/hostfs/var/lib/docker/containers
  #     # - ./django_info.log:/app/django_info.log

  #   depends_on:
  #     - db
  #     - redis
  #   restart: always

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
  #   environment:
  #     - discovery.type=single-node
  #     - ELASTIC_PASSWORD=admin123
  #     - xpack.security.enabled=true
  #   ports:
  #     - "9200:9200"
  #   restart: always

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.10.2
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_URL=http://elasticsearch:9200
  #     - ELASTICSEARCH_USERNAME=elastic
  #     - ELASTICSEARCH_PASSWORD=admin123
  #     - xpack.security.enabled=true
  #   depends_on:
  #     - elasticsearch
  #   restart: always

  adminer:
    image: adminer:latest
    ports:
      - "8989:8080"
    depends_on:
      - db
    environment:
      - ADMINER_DEFAULT_SERVER=db
      - ADMINER_DESIGN=dracula
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redisdata:
